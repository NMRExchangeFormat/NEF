#==========================================================================
#  Nmr Exchange Format
#
#  Draft version 0.91  August 2016 Rasmus Fogh,
#
#  Commented example file with representative examples and a value for all tags
#

data_nef_my_nmr_project_1

#
#===========================================================================
# Section 1
#
# Mandatory: nmr meta data
#
# Singleton (only one per project)
#
#========================================================================


   save_nef_nmr_meta_data

      # Mandatory:
      _nef_nmr_meta_data.sf_category      nef_nmr_meta_data
      _nef_nmr_meta_data.sf_framecode     nef_nmr_meta_data

      _nef_nmr_meta_data.format_name      nmr_exchange_format
      _nef_nmr_meta_data.format_version   0.91
      _nef_nmr_meta_data.program_name     CcpNmr
      _nef_nmr_meta_data.program_version  3.0.b1
      _nef_nmr_meta_data.creation_date    2016-07-20T18:25:26.324290
      _nef_nmr_meta_data.uuid             CcpNmr-2016-07-20T18:25:26.324290-1226605315

      # Optional:
      _nef_nmr_meta_data.coordinate_file_name  depositiondir/somefile.ext

      # Optional loops (to end of saveframe):

      # Related database entries
      loop_

         # mandatory parameters
         _nef_related_entries.database_name
         _nef_related_entries.database_accession_code
 
         # key: database_name, database_accession_code

         BMRB   12345
         BMRB   22277
         PDB    2k5v
         PDB    2hhx
         PDB    1aap
      stop_

      # Program scripts used
      loop_
         # mandatory parameter
         _nef_program_script.program_name
    
         # optional parameters
         _nef_program_script.script_name
         _nef_program_script.script

         # program-specific parameter
         _nef_program_script.cyana_parameter_1

         # key: program_name, script_name

    	 CYANA  init.cya
;
rmsdrange:=1-93

cyanalib

read seq protein.seq

;
         5
         Cyana  init2.cya
;
rmsdrange:=3-90

cyanalib

read seq protein.seq

;
   
         12
      stop_



      # Data history loop
      loop_
         # mandatory parameters
         _nef_run_history.run_ordinal
         _nef_run_history.program_name
    
         # optional parameters
         _nef_run_history.program_version
         _nef_run_history.script_name
         _nef_run_history.script

         # key: run_ordinal

         1   TOPSPIN  3.1   mypulprog.name
;
INSERT PULSE PROGRAM HERE

;

         2   UNIO  . . .
      stop_

      # NOTE: The values in this loop refer to previous runs, and so contain
      # different information from the _nef_program_script loop.

   save_

#========================================================================
# Section 2
#
# Optional: Example of program-specific saveframe:
#
#=========================================================================

   save_cyana_additional_data_1

      # Mandatory:
      _cyana_additional_data.sf_category           	cyana_additional_data
      _cyana_additional_data.sf_framecode           cyana_additional_data_1

      _cyana_additional_data.special_version  5

   save_


#=========================================================================
#
# Section 3
#
# Mandatory: Molecular system
#
# Singleton (only one per data block)
#
#=======================================================================


   save_nef_molecular_system

      # Mandatory:
      _nef_molecular_system.sf_category   nef_molecular_system
      _nef_molecular_system.sf_framecode  nef_molecular_system

      # Mandatory:
      loop_
	 # mandatory parameters
         _nef_sequence.chain_code
         _nef_sequence.sequence_code
         _nef_sequence.residue_type
         
	 # optional parameters
         _nef_sequence.linking
         _nef_sequence.residue_variant

         # key: chain_code, sequence_code

         A  13   ALA  start      .
         A  14   TRP  middle     .
         A  15   GLY  middle     .
         A  16   ASN  middle     .
         A  17   VAL  middle     .
         A  18   PHE  middle     .
         A  19   LEU  middle     .
         A  20   CYS  middle     .
         A  21   ALA  middle     .
         A  22   THR  middle     .
         A  23   LYS  middle     .
         A  24   ASP  middle     .
         A  24B  GLN  middle     .
         A  24C  GLN  middle     .
         A  24D  TYR  middle     .
         A  25   HIS  end        .
         B  17   CYS  single     .
         C  1    GLY  cyclic     .
         C  2    PRO  middle     cispeptide
         C  3    ASP  middle     ASP_LL
         C  4    GLY  middle     .
         C  5    PRO  middle     .
         C  6    ASP  cyclic     .
         D -3    TNSR dummy      .
         D -2    LL2  dummy      .
         D -1    LL1  dummy      .
         D  0    LL   dummy      .
         D  1    ALA  .          .
         D  2    CYS  .          .
         D  3    GLY  .          .
         D  4    CYS  .          .
         D  5    VAL  .          .
         D  6    CYS  .          .
         D  7    PHE  .          .
         D  8    CYS  .          .
         D  9    ASN  .          .
         E  1    ASN  break      .
         E  2    THR  middle     .
         E  3    ALA  middle     .
         E  4    PRO  middle     .
         E  5    ALA  middle     .
         E  6    GLU  middle     .
         E  7    SER  middle     .
         E  8    GLN  middle     .
         E  9    GLU  middle     GLU_LL
         E  10   HIS  middle     HIS_LL_DHD1
         E  11   HIS  middle     HIS_LL_DHE2
         E  12   CYS  middle     CYS_LL
         E  13   LYS  middle     LYS_LL_DHZ3
         E  14   ARG  break      ARG_LL_DHH12
         E  15   MOH  nonlinear  .
         E  16   GLC  nonlinear  .
         F   1   GLY  start      .
         F   2   ILE  middle     .
         F   3   SER  middle     .
         F   4   THR  break      .
         F  11   ASN  middle     .
         F  12   SER  end        .
         G   3   TYR  middle     .
         G   4   GLY  middle     .
         G   5   ALA  middle     .
         Y   1   ATP  nonlinear  .
      stop_

# Chain A is a linear Hexadecapeptide (13-25), disulfide linked to a free
# cysteine (Chain B)
#
# Chain C is a cyclic hexapeptide, containing a cis-peptide bond at PRO 2.
#
# Chain D is a nonapeptide, defined with dangling ends (as might for instance be used
# for CYANA). It contains two disulfide bonds, 2-6 and 4-8 - the connections are shown 
# in the _nef_covalent_links loop. Four additional dummy residues have been added at the
# N-terminal, three linker residues and a tensor-origin residue ('TNSR').
# Note that there is NO sequential link between chains D and E, even though both have
# dangling ends. Interchain links must always be given explictly in the _nef_covalent_links loop.
#
# Chain E has an amide bond between the between the backbone N of ASN 1 and the side chain carboxylate
# of GLU 6, and a methyl ester cap.
# It also has a glucose (with the same chain code) linked to THR 2
#
# Chains F and G represent a chimeric protein, where (part of) chain G has been
# inserted into chain F while maintaining the original numbering. Each chain is given as a
# single block of residues, with the 'break' linking to show the chain break, and the 
# nef_covalent_links loop to show the additional sequential links.
#
# residue_variants default to the pH 7 forms, specifically protonated LYS, ARG, and N-terminus
# and deprotonated ASP, GLU, and C-terminus. 'deprotonated' CYS is generally assumed to be the 
# disulfide form (The RCSB variant codes do not distinguish between disulfide and deprotonated 
# Note that each variant comes in three forms: 'middle' (contains '_LL'), 'end (contains '_LEO2'),
# and 'start' (contains '_LSN3')
#
# Chain E shows examples of how to specify the non-default forms supported by the NEF format.
#
# Chain Y is free ATP

# Covalent cross-links loop. Optional:
      loop_
         # mandatory parameters
         _nef_covalent_links.chain_code_1
         _nef_covalent_links.sequence_code_1
         _nef_covalent_links.residue_type_1
         _nef_covalent_links.atom_name_1
         _nef_covalent_links.chain_code_2
         _nef_covalent_links.sequence_code_2
         _nef_covalent_links.residue_type_2
         _nef_covalent_links.atom_name_2

         # key: chain_code_1, sequence_code_1, atom_name_1, chain_code_2, sequence_code_2, atom_name_2

         A 20 CYS SG B 17 CYS SG
         D  2 CYS SG  D  6 CYS SG
         D  4 CYS SG  D  8 CYS SG
         E  1 ASN N   E  6 GLU CD
         E  2 THR CB  E 16 GLC O1
         E 14 ARG C   E 15 MOH O
         F  4 THR C   G  3 TYR N
         F 11 ASN N   G  5 ALA C
      stop_

   save_



#===========================================================================
# Section 4
#
# Mandatory: Chemical shift table(s)
#===========================================================================

   save_nef_chemical_shift_list_1

      # All tags in this saveframe are mandatory, except for value_uncertainty.

      _nef_chemical_shift_list.sf_category                nef_chemical_shift_list
      _nef_chemical_shift_list.sf_framecode               nef_chemical_shift_list_1
      _nef_chemical_shift_list.atom_chemical_shift_units  ppm

      loop_
         _nef_chemical_shift.chain_code
         _nef_chemical_shift.sequence_code
         _nef_chemical_shift.residue_type
         _nef_chemical_shift.atom_name
         _nef_chemical_shift.value
         _nef_chemical_shift.value_uncertainty
      
         # key: chain_code, sequence_code, atom_name

         @2    SS@12   .     CAi-1  48.2    0   
         @2    SS@231  GLX?  CAi-1  48.2    0   
         A     14      TRP   HB2    3.4     0   
         A     14      TRP   HB3    3.2     0   
         A     14      TRP   HE1    9.9     0   
         A     14      TRP   NE1    135.6   0   
         A     15      GLY   H      7.8     0   
         A     15      GLY   N      106.5   0   
         A     15      GLY   QA     3.42    0.02
         A     17      VAL   CG%    22.1    0.3 
         A     17      VAL   HG%    0.73    0.02
         A     18      PHE   H      8.3     0   
         A     18      PHE   HB2    2.87    0.02
         A     18      PHE   HB3    2.42    0.02
         A     18      PHE   N      119.5   0   
         A     19      LEU   CA     172.2   0   
         A     19      LEU   CB     58.5    0   
         A     19      LEU   CD1    22.2    0   
         A     19      LEU   CD2    58.5    0   
         A     19      LEU   CDX    17.4    0.3 
         A     19      LEU   CDY    18.7    0.3 
         A     19      LEU   CG     32.3    0   
         A     19      LEU   HBX    2.13    0.02
         A     19      LEU   HBY    2.51    0.02
         A     19      LEU   HDX%   0.87    0.02
         A     19      LEU   HDY%   0.73    0.02
         A     19      LEU   HN     7.2     0   
         A     19      LEU   N      119.5   0   
         A     20      CYS   HBX    3.2     0   
         A     21      ALA   H      8.33    0.02
         A     21      ALA   HA     4.17    0.02
         A     21      ALA   HB%    1.34    0.02
         A     23      LYS   CA     43.2    0.25
         A     23      LYS   H      8.45    0.04
         A     23      LYS   HA     4.27    0.02
         A     23      LYS   N      123.45  0.4 
         A     24      ASP   HBY    3.4     0   
         A     24B     GLN   H      8.3     0   
         A     24B     GLN   N      119.5   0   
         A     24C     GLN   C      28.3    0   
         A     24C     GLN   CA     22.2    0   
         A     24C     GLN   CB     58.5    0   
         A     24C     GLN   CG     32.3    0   
         A     24D     TYR   H      8.3     0   
         A     24D     TYR   N      119.5   0   
         Z     @5      GLX   H      9.1     0   
         Z     @5      GLX   N      118.3   0   
      stop_

# The atom_name by itself serves to distinguish between real atoms ('HA'),
#  pseudoatoms ('QA'), sets of atoms ('HB%'), sterospecifically assigned atoms
# ('HB2'), and non-stereospecifically assigned atoms ('HBX').
# In the example, Phe 18 HB2/HB3 are stereospecifically assigned, while Leu 19
# is not.
# Gly 15 QA is a pseudoatom, i.e. an atom at the HA2/HA3 centroid with zero van
# der Waals radius.
# Val 17 HG%/CG% show two methyl groups that overlap in both carbon and proton
# dimensions.
# 19 LEU HDX% is the methyl bound to CDX (and not to CDY).
# The last two shifts (with chain_code @2) are unassigned but observed resonances,

   save_


#=======================================================================
# Section 5
#
# Optional: Distance restraint list(s)
#
# There must be one saveframe for each restraint list - this is how
# grouping is managed.
#
#=======================================================================


save_nef_distance_restraint_list_L1


# Mandatory parameters
      _nef_distance_restraint_list.sf_category     nef_distance_restraint_list
      _nef_distance_restraint_list.sf_framecode    nef_distance_restraint_list_L1
      _nef_distance_restraint_list.potential_type  square-well-parabolic-linear
  
      # Optional parameter:
      _nef_distance_restraint_list.restraint_origin     noe
      # The restraint_origin describes the origin or source of the restraints. For
      # distance restraints likely values would be 'noe', 'hbond', 'mutation', 'shift_perturbation' 

      loop_
         # Mandatory parameters, except for restraint_combination_id
         _nef_distance_restraint.ordinal
         _nef_distance_restraint.restraint_id
         _nef_distance_restraint.restraint_combination_id
         _nef_distance_restraint.chain_code_1
         _nef_distance_restraint.sequence_code_1
         _nef_distance_restraint.residue_type_1
         _nef_distance_restraint.atom_name_1
         _nef_distance_restraint.chain_code_2
         _nef_distance_restraint.sequence_code_2
         _nef_distance_restraint.residue_type_2
         _nef_distance_restraint.atom_name_2
         _nef_distance_restraint.weight

         # The following parameters are optional. target_value and target_value_uncertainty
         # should be given whenever a meaningful value is known'
         # Other parameters need be given only if they are defined for the potential_type
         _nef_distance_restraint.target_value
         _nef_distance_restraint.target_value_uncertainty
         _nef_distance_restraint.lower_linear_limit
         _nef_distance_restraint.lower_limit
         _nef_distance_restraint.upper_limit
         _nef_distance_restraint.upper_linear_limit
      
         # key: ordinal

         1  1  .  A  17  VAL  H    A  21  ALA  HB%   1  3.7  0.4  2    2.5  4.2  4.7
         2  1  .  A  17  VAL  H    A  22  THR  HG2%  1  3.7  0.4  2    2.5  4.2  4.7
         3  1  .  A  18  LEU  H    A  21  ALA  HB%   1  3.7  0.4  2    2.5  4.2  4.7
         4  1  .  A  18  LEU  H    A  22  THR  HG2%  1  3.7  0.4  2    2.5  4.2  4.7
         5  5  .  A  18  PHE  HB2  A  24  ASP  HBX   1  2.8  0.4  1.5  2    3.2  3.7
         6  8  .  A  18  PHE  HB2  A  24  ASP  HBY   1  4.4  0.4  3.6  4.1  5.2  5.7
         7  8  .  A  24  ASP  HBY  E   7  SER  HB2   1  4.4  0.4  3.6  4.1  5.2  5.7
      stop_

      # The first column (ordinal) is a consecutive line number that does not persist  
      # when data are re-exported
      # The second column gives the restraint ID.
      # Lines with the same restraint_id are combined into a single restraint
      # (OR operations, effectively an ambiguous assignment).
      # The restraint_combination_id is used for more complex logic,
      # see the dihedral or hbond restraints for examples.

      # Each line (sub-restraint) of the table has its own independent
      # parameters (weight, target_value, upper_limit, etc.), which may be different
      # within the same restraint.

   save_


save_nef_distance_restraint_list_hbond1


# Mandatory parameters
      _nef_distance_restraint_list.sf_category     nef_distance_restraint_list
      _nef_distance_restraint_list.sf_framecode    nef_distance_restraint_list_hbond1
      _nef_distance_restraint_list.potential_type  square-well-parabolic
  
      # Optional parameter:
      _nef_distance_restraint_list.restraint_origin     hbond
      # The restraint_origin describes the origin or source of the restraints. For
      # distance restraints likely values would be 'noe', 'hbond', 'mutation', 'shift_perturbation' 

      loop_
         # Mandatory parameters, except for restraint_combination_id
         _nef_distance_restraint.ordinal
         _nef_distance_restraint.restraint_id
         _nef_distance_restraint.restraint_combination_id
         _nef_distance_restraint.chain_code_1
         _nef_distance_restraint.sequence_code_1
         _nef_distance_restraint.residue_type_1
         _nef_distance_restraint.atom_name_1
         _nef_distance_restraint.chain_code_2
         _nef_distance_restraint.sequence_code_2
         _nef_distance_restraint.residue_type_2
         _nef_distance_restraint.atom_name_2
         _nef_distance_restraint.weight

         # The following parameters are optional. target_value and target_value_uncertainty
         # should be given whenever a meaningful value is known'
         # Other parameters need be given only if they are defined for the potential_type
         _nef_distance_restraint.target_value
         _nef_distance_restraint.target_value_uncertainty
         _nef_distance_restraint.lower_linear_limit
         _nef_distance_restraint.lower_limit
         _nef_distance_restraint.upper_limit
         _nef_distance_restraint.upper_linear_limit
      
         # key: ordinal

         1  1  .  A  15  VAL  H    A  24B  THR  O     1  1.8    .  .  1.4    2.7  .
         2  2  .  A  15  VAL  N    A  24B  THR  O     1  2.8    .  .  2.4    3.7  .
         3  3  1  A  13  THR  O    A  16   VAL  H     1  1.8    .  .  1.4    2.7  .
         4  3  1  A  13  THR  O    A  16   VAL  N     1  2.8    .  .  2.4    3.7  .
         5  4  2  A  17  VAL  H    A  22   THR  O     1  1.8    .  .  1.4    2.7  .
         6  4  2  A  17  VAL  N    A  22   THR  O     1  2.8    .  .  2.4    3.7  .
         7  4  3  A  17  VAL  H    A  24   ASP  O     1  1.8    .  .  1.4    2.7  .
         8  4  3  A  17  VAL  N    A  24   ASP  O     1  2.8    .  .  2.4    3.7  .
      stop_

      # The first column (ordinal) is a consecutive line number that does not persist  
      # when data are re-exported
      # The second column gives the restraint ID.
      # Lines with the same restraint_id are combined into a single restraint
      # (OR operations, effectively an ambiguous assignment).
      # The restraint_combination_id is used for more complex logic; terms that share the same
      # restraint_combination_id (which must be within the same restraint) are ANDed, and the terms
      # within each restraint are subsequently ORed.
      #
      # Restraints 1 and 2 between them define a hydrogen bond; different restraints are ANDed
      # Restraint 3 defined one hydrogen bond by ANDing two contributions; this is equivalent
      # to the information gien in restraints 1 and 2
      # Restraint 4 defines an ambiguous hydrogen bond, 
      # where VAL 17 HN is bound to either THR 22 O or to ASP 24 O.

   save_

#============================================================================
# Section 6
#
# Optional: Dihedral restraint list(s)
#============================================================================

   save_nef_dihedral_restraint_list_L2

      # Mandatory parameters:
      _nef_dihedral_restraint_list.sf_category     nef_dihedral_restraint_list
      _nef_dihedral_restraint_list.sf_framecode    nef_dihedral_restraint_list_L2
      _nef_dihedral_restraint_list.potential_type  square-well-parabolic

      # Optional parameter:
      _nef_dihedral_restraint_list.restraint_origin     talos
      # The restraint_origin describes the origin or source of the restraints. For
      # distance restraints likely values would be 'chemical_shift', 'jcoupling'

      loop_
         # Mandatory parameters, except for restraint_combination_id
         _nef_dihedral_restraint.ordinal
         _nef_dihedral_restraint.restraint_id
         _nef_dihedral_restraint.restraint_combination_id
         _nef_dihedral_restraint.chain_code_1
         _nef_dihedral_restraint.sequence_code_1
         _nef_dihedral_restraint.residue_type_1
         _nef_dihedral_restraint.atom_name_1
         _nef_dihedral_restraint.chain_code_2
         _nef_dihedral_restraint.sequence_code_2
         _nef_dihedral_restraint.residue_type_2
         _nef_dihedral_restraint.atom_name_2
         _nef_dihedral_restraint.chain_code_3
         _nef_dihedral_restraint.sequence_code_3
         _nef_dihedral_restraint.residue_type_3
         _nef_dihedral_restraint.atom_name_3
         _nef_dihedral_restraint.chain_code_4
         _nef_dihedral_restraint.sequence_code_4
         _nef_dihedral_restraint.residue_type_4
         _nef_dihedral_restraint.atom_name_4
         _nef_dihedral_restraint.weight

         # The following parameters are optional. target_value and target_value_uncertainty
         # should be given whenever a meaningful value is known'
         # Other parameters need be given only if they are defined for the potential_type
         _nef_dihedral_restraint.target_value
         _nef_dihedral_restraint.target_value_uncertainty
         _nef_dihedral_restraint.lower_linear_limit
         _nef_dihedral_restraint.lower_limit
         _nef_dihedral_restraint.upper_limit
         _nef_dihedral_restraint.upper_linear_limit
         _nef_dihedral_restraint.name
      
         # key: ordinal
         
         1   1  .  A  21  ALA  N   A  21  ALA  CA  A  21  ALA  C   A  22   THR  N    1  -50  5  .  -60  -40  .  PSI
         2   1  .  A  21  ALA  N   A  21  ALA  CA  A  21  ALA  C   A  22   THR  N    1  105  5  .  90   120  .  PSI
         3   2  .  A  21  ALA  C   A  22  THR  N   A  22  THR  CA  A  22   THR  C    3  -50  8  .  -60  -40  .  PHI
         4   3  1  A  23  LYS  C   A  24  ASP  N   A  24  ASP  CA  A  24   ASP  C    1  -50  5  .  -60  -40  .  PHI
         5   3  1  A  24  ASP  N   A  24  ASP  CA  A  24  ASP  C   A  24B  GLN  N    1  -50  5  .  -60  -40  .  PSI
         6   4  2  A  15  GLY  C   A  16  ASN  N   A  16  ASN  CA  A  16   ASN  C    1  -50  5  .  -60  -40  .  PHI
         7   4  2  A  16  ASN  N   A  16  ASN  CA  A  16  ASN  C   A  17   VAL  N    1  -50  5  .  -60  -40  .  PSI
         8   4  3  A  15  GLY  C   A  16  ASN  N   A  16  ASN  CA  A  16   ASN  C    1  -80  5  .  -90  -70  .  PHI
         9   4  3  A  16  ASN  N   A  16  ASN  CA  A  16  ASN  C   A  17   VAL  N    1  -80  5  .  -90  -70  .  PSI
         10  5  .  A  19  LEU  CA  A  19  LEU  CB  A  19  LEU  CG  A  19   LEU  CDX  1  -80  5  .  -90  -70  .  .  
      stop_

      # - Restraint 1 is an ambiguous psi restraint. The atoms are the same,
      #   but there are two allowed angle ranges in this case, so there are
      #   two sub-restraints with different parameters on the two lines.
      #
      #   Restraint 2 is a normal phi restraint - note the different weight.
      #
      #   Restraint 3 is a combination of a phi and a psi restraint AND'ed
      #   together. Normally this kind of restraint would rarely be used
      #   - you would simply divide this into two separate restraints -
      #   but it is put here to show how the restraint_combination_id works.
      #
      #   Restraint 4 defines two separate non-contiguous regions in the
      #   Ramachandran plot, and shows how the restraint_combination_id
      #   is used in practice. The logic of the restraint is :
      #   (item1 AND item2) OR (item3 AND item4)
      #
      #   Subrestraints with the same restraint_combination_id
      #   are AND'ed together, after which groups and individual
      #   subrestraints within a given restraint are OR'ed as usual.
      #   restraint_combination_id are unique across the entire table, so
      #   you can select a set of AND'ed restraints by selecting all lines
      #   with the same index in the combination_id column. Only
      #   restraint items within the same restraint can be AND'ed together,
      #   or, in other words, a given restraint_combination_id can only be
      #   used within the same restraint.

   save_

#=======================================================================
# Section 7
#
# Optional: RDC restraint list(s)
#=======================================================================

   save_nef_rdc_restraint_list_3

      # Mandatory parameters
      _nef_rdc_restraint_list.sf_category           nef_rdc_restraint_list
      _nef_rdc_restraint_list.sf_framecode          nef_rdc_restraint_list_3
      _nef_rdc_restraint_list.potential_type        log-normal
  
      # Optional parameters
      _nef_rdc_restraint_list.restraint_origin     measured
      # The restraint_origin describes the origin or source of the restraints.
      _nef_rdc_restraint_list.tensor_magnitude      11 
      _nef_rdc_restraint_list.tensor_rhombicity     0.067
      _nef_rdc_restraint_list.tensor_chain_code     C
      _nef_rdc_restraint_list.tensor_sequence_code  900
      _nef_rdc_restraint_list.tensor_residue_type   TNSR

      loop_
         # Mandatory parameters, except for restraint_combination_id
         _nef_rdc_restraint.ordinal
         _nef_rdc_restraint.restraint_id
         _nef_rdc_restraint.restraint_combination_id
         _nef_rdc_restraint.chain_code_1
         _nef_rdc_restraint.sequence_code_1
         _nef_rdc_restraint.residue_type_1
         _nef_rdc_restraint.atom_name_1
         _nef_rdc_restraint.chain_code_2
         _nef_rdc_restraint.sequence_code_2
         _nef_rdc_restraint.residue_type_2
         _nef_rdc_restraint.atom_name_2
         _nef_rdc_restraint.weight

         # The following parameters are optional. target_value and target_value_uncertainty
         # should be given whenever a meaningful value is known'
         # Other parameters need be given only if they are defined for the potential_type
         _nef_rdc_restraint.target_value
         _nef_rdc_restraint.target_value_uncertainty

         # Optional parameters - use only the ones needed for the potential:
         _nef_rdc_restraint.lower_linear_limit
         _nef_rdc_restraint.lower_limit
         _nef_rdc_restraint.upper_limit
         _nef_rdc_restraint.upper_linear_limit
         _nef_rdc_restraint.scale
         _nef_rdc_restraint.distance_dependent

         # key: ordinal

         1  1  .  A  21  ALA  H  A  21  ALA  N  1  -5.2  0.33  .  .  .  .  1  false
         2  2  .  A  22  THR  H  A  22  THR  N  1  3.1   0.4   .  .  .  .  1  false
      stop_

   save_



#=======================================================================
# Section 8
#
# Optional: Peak list(s)
#=======================================================================


   save_nef_nmr_spectrum_cnoesy1

      # Mandatory parameters
      _nef_nmr_spectrum.sf_category                nef_nmr_spectrum
      _nef_nmr_spectrum.sf_framecode               nef_nmr_spectrum_cnoesy1

      _nef_nmr_spectrum.num_dimensions             3
      _nef_nmr_spectrum.chemical_shift_list        nef_chemical_shift_list_1
  
      # optional parameters
      _nef_nmr_spectrum.experiment_classification  H_H[N].through-space
      _nef_nmr_spectrum.experiment_type            '15N NOESY-HSQC'
      # The chemical_shift_list gives the saveframe id within the project for the saveframe
      # that contains the relevant chemical shift list.

      # The experiment_classification uses the CCPN convention
      # See http://link.springer.com/article/10.1007%2Fs10858-006-9076-z
      #
      # The experiment_type is freely settable by the user / program.

      loop_

      # mandatory parameters
         _nef_spectrum_dimension.dimension_id
         _nef_spectrum_dimension.axis_unit
         _nef_spectrum_dimension.axis_code
      
      # optional parameters
         _nef_spectrum_dimension.spectrometer_frequency
         _nef_spectrum_dimension.spectral_width
         _nef_spectrum_dimension.value_first_point
         _nef_spectrum_dimension.folding
         _nef_spectrum_dimension.absolute_peak_positions
         _nef_spectrum_dimension.is_acquisition

  # key: dimension_id

         1  ppm  1H   500.139  10.4  9.9   circular  true  false
         2  ppm  15N  98.37    30.7  127   circular  true  false
         3  ppm  1H   500.139  14.2  11.8  none      true  true 
      stop_

      # dimension_id, axis_unit, and axis_code are mandatory.

      # - axis_unit could be 'Hz' 'ppm', 'point', 's', ...
      # - axis_code is the isotope (in the form '1H', '13C', ...) for shifts,
      #   e.g. 'delay' for a T1 time axis. More complicated versions will be
      #   needed for J-coupling, multiple-quantum and other non-shift axes.
      # - Spectrometer frequency is in MHz
      # - spectral_width  is the acquisition SW, that is used for folding, in units of
      #   axis_unit
      #   Similarly, value_first_point is the value for point 1 in the spectrum after
      #   Fourier transformation, i..e *before* then removal of any points.
      # - folding can be either 'mirror' (seq. quadrature),
      #   'circular' (std. aliasing, for sim. quadrature), or 'none'
      # - absolute_peak_positions determines if peak positions are correct or may be
      #   folded/aliased.
      #   If 'false' all peaks are given in the acquisition window, whether this is
      #   their correct position or not.
      #   If 'true' peaks are given at their correct position, whether this is
      #   in the acquisition window or not.
      # - is_acquisition  Is this the acquisition dimension?
      #
      # Strictly speaking, 'folding' and 'spectral_width' are only necessary if
      # 'absolute_peak_positions' is false, and 'value_first_point' is only necessary
      # if folding also is 'mirror'.
      # It is still recommended to put in all parameters where known.

      # Mandatory loop.

      loop_
         # mandatory parameters
         _nef_spectrum_dimension_transfer.dimension_1
         _nef_spectrum_dimension_transfer.dimension_2
         _nef_spectrum_dimension_transfer.transfer_type
      
         # optional parameter
         _nef_spectrum_dimension_transfer.is_indirect

         # key: dimension_1, dimension_2

         1  3  through-space  false
         2  3  onebond        false
      stop_

      # For peak lists with different dimensionality tags are added and removed to fit.
      # The example here is for a 3D peak list
      #
      # Dimensions are given in the order of the _nef_Spectrum.dimension_id defined above.

      loop_
         _nef_peak.ordinal
         _nef_peak.peak_id
         _nef_peak.volume
         _nef_peak.volume_uncertainty
         _nef_peak.height
         _nef_peak.height_uncertainty
         _nef_peak.position_1
         _nef_peak.position_uncertainty_1
         _nef_peak.position_2
         _nef_peak.position_uncertainty_2
         _nef_peak.position_3
         _nef_peak.position_uncertainty_3
         _nef_peak.chain_code_1
         _nef_peak.sequence_code_1
         _nef_peak.residue_type_1
         _nef_peak.atom_name_1
         _nef_peak.chain_code_2
         _nef_peak.sequence_code_2
         _nef_peak.residue_type_2
         _nef_peak.atom_name_2
         _nef_peak.chain_code_3
         _nef_peak.sequence_code_3
         _nef_peak.residue_type_3
         _nef_peak.atom_name_3

         # key: ordinal

         1   1  73000000  5100000   33000000  1100000   3.2  0.05  119.5  0.5  8.3  0.03  A  14  TRP  HB3  A  18    PHE  N    A  18    PHE  H  
         2   1  73000000  5100000   33000000  1100000   3.2  0.05  119.5  0.5  8.3  0.03  A  19  LEU  HBY  A  24B   GLN  N    A  24B   GLN  H  
         3   1  73000000  5100000   33000000  1100000   3.2  0.05  119.5  0.5  8.3  0.03  A  19  LEU  HBY  A  24D   TYR  N    A  24D   TYR  H  
         4   1  73000000  5100000   33000000  1100000   3.2  0.05  119.5  0.5  8.3  0.03  A  20  CYS  HBX  A  24B   GLN  N    A  24B   GLN  H  
         5   1  73000000  5100000   33000000  1100000   3.2  0.05  119.5  0.5  8.3  0.03  A  20  CYS  HBX  A  24D   TYR  N    A  24D   TYR  H  
         6   3  54000000  7300000   34000000  5300000   4.4  0.05  106.5  0.5  7.8  0.03  .  .   .    .    A  15    GLY  N    A  15    GLY  H  
         7   4  88000000  13000000  48000000  3300000   3.2  0.05  135.6  0.5  9.9  0.03  A  14  TRP  HB3  A  14    TRP  NE1  A  14    TRP  HE1
         8   5  88000000  13000000  58000000  23000000  3.4  0.05  135.6  0.5  9.9  0.03  A  14  TRP  HB2  A  14    TRP  NE1  A  14    TRP  HE1
         9   5  88000000  13000000  58000000  23000000  3.4  0.05  135.6  0.5  9.9  0.03  A  24  ASP  HBY  A  14    TRP  NE1  A  14    TRP  HE1
         10  7  59000000  7100000   29000000  6100000   1.7  0.05  118.3  0.5  9.1  0.03  .  .   .    .    Z  @5    GLX  N    Z  @5    GLX  H  
      stop_

      # Peaks 1 and 5 have ambiguous assignments.

      # The frequency for A 14 Trp NE1 at 135.6 is likely outside the
      # acquisition window. Since absolute_peak_positions is true for this dimension,
      # the peak is given at the correct resonance frequency, rather than at
      # the apparent position within the acquisition window.

      # Volumes and peak position information are duplicated on each line belonging to
      # a peak
      # All such values must be identical, and written out as such. Programs may or
      # may not check for errors when reading.

   save_


   save_nef_nmr_spectrum_dummy15d

      # Mandatory parameters
      _nef_nmr_spectrum.sf_category          nef_nmr_spectrum
      _nef_nmr_spectrum.sf_framecode         nef_nmr_spectrum_dummy15d

      _nef_nmr_spectrum.num_dimensions       15
      _nef_nmr_spectrum.chemical_shift_list  nef_chemical_shift_list_1
  
      # optional parameters
      _nef_nmr_spectrum.experiment_classification  .
      _nef_nmr_spectrum.experiment_type      HNCCCCCCCCCCCCC

      loop_
      
         # mandatory parameters
         _nef_spectrum_dimension.dimension_id
         _nef_spectrum_dimension.axis_unit
         _nef_spectrum_dimension.axis_code
      
         # optional parameters
         _nef_spectrum_dimension.spectrometer_frequency
         _nef_spectrum_dimension.spectral_width
         _nef_spectrum_dimension.value_first_point
         _nef_spectrum_dimension.folding
         _nef_spectrum_dimension.absolute_peak_positions
         _nef_spectrum_dimension.is_acquisition
      
         # key: dimension_id

         1  ppm  1H   500.139  10.4    9.9 circular  true    false
         2  ppm 15N    98.37   30.7  127.0 circular  true    false
         3  ppm 13C      .       .      .  .         .       .
         4  ppm 13C      .       .      .  .         .       .
         5  ppm 13C      .       .      .  .         .       .
         6  ppm 13C      .       .      .  .         .       .
         7  ppm 13C      .       .      .  .         .       .
         8  ppm 13C      .       .      .  .         .       .
         9  ppm 13C      .       .      .  .         .       .
        10  ppm 13C      .       .      .  .         .       .
        11  ppm 13C      .       .      .  .         .       .
        12  ppm 13C      .       .      .  .         .       .
        13  ppm 13C      .       .      .  .         .       .
        14  ppm 13C      .       .      .  .         .       .
        15  ppm 13C      .       .      .  .         .       .
      stop_


      # Peak lists can in theory be up to 15D
      # No spectra are 15D, of course, but some automatic assignment programs
      # can produce data as 15D peak lists. This is unlikely ever to matter in practice,
      # but the relevant loop tags are defined up to 15D - you just skip the ones you do not want.
      # and ignore spectra of too high dimensionality

      loop_
         _nef_peak.ordinal
         _nef_peak.peak_id
         _nef_peak.volume
         _nef_peak.volume_uncertainty
         _nef_peak.height
         _nef_peak.height_uncertainty
         _nef_peak.position_1
         _nef_peak.position_uncertainty_1
         _nef_peak.position_2
         _nef_peak.position_uncertainty_2
         _nef_peak.position_3
         _nef_peak.position_uncertainty_3
         _nef_peak.position_4
         _nef_peak.position_uncertainty_4
         _nef_peak.position_5
         _nef_peak.position_uncertainty_5
         _nef_peak.position_6
         _nef_peak.position_uncertainty_6
         _nef_peak.position_7
         _nef_peak.position_uncertainty_7
         _nef_peak.position_8
         _nef_peak.position_uncertainty_8
         _nef_peak.position_9
         _nef_peak.position_uncertainty_9
         _nef_peak.position_10
         _nef_peak.position_uncertainty_10
         _nef_peak.position_11
         _nef_peak.position_uncertainty_11
         _nef_peak.position_12
         _nef_peak.position_uncertainty_12
         _nef_peak.position_13
         _nef_peak.position_uncertainty_13
         _nef_peak.position_14
         _nef_peak.position_uncertainty_14
         _nef_peak.position_15
         _nef_peak.position_uncertainty_15
         _nef_peak.chain_code_1
         _nef_peak.sequence_code_1
         _nef_peak.residue_type_1
         _nef_peak.atom_name_1
         _nef_peak.chain_code_2
         _nef_peak.sequence_code_2
         _nef_peak.residue_type_2
         _nef_peak.atom_name_2
         _nef_peak.chain_code_3
         _nef_peak.sequence_code_3
         _nef_peak.residue_type_3
         _nef_peak.atom_name_3
         _nef_peak.chain_code_4
         _nef_peak.sequence_code_4
         _nef_peak.residue_type_4
         _nef_peak.atom_name_4
         _nef_peak.chain_code_5
         _nef_peak.sequence_code_5
         _nef_peak.residue_type_5
         _nef_peak.atom_name_5
         _nef_peak.chain_code_6
         _nef_peak.sequence_code_6
         _nef_peak.residue_type_6
         _nef_peak.atom_name_6
         _nef_peak.chain_code_7
         _nef_peak.sequence_code_7
         _nef_peak.residue_type_7
         _nef_peak.atom_name_7
         _nef_peak.chain_code_8
         _nef_peak.sequence_code_8
         _nef_peak.residue_type_8
         _nef_peak.atom_name_8
         _nef_peak.chain_code_9
         _nef_peak.sequence_code_9
         _nef_peak.residue_type_9
         _nef_peak.atom_name_9
         _nef_peak.chain_code_10
         _nef_peak.sequence_code_10
         _nef_peak.residue_type_10
         _nef_peak.atom_name_10
         _nef_peak.chain_code_11
         _nef_peak.sequence_code_11
         _nef_peak.residue_type_11
         _nef_peak.atom_name_11
         _nef_peak.chain_code_12
         _nef_peak.sequence_code_12
         _nef_peak.residue_type_12
         _nef_peak.atom_name_12
         _nef_peak.chain_code_13
         _nef_peak.sequence_code_13
         _nef_peak.residue_type_13
         _nef_peak.atom_name_13
         _nef_peak.chain_code_14
         _nef_peak.sequence_code_14
         _nef_peak.residue_type_14
         _nef_peak.atom_name_14
         _nef_peak.chain_code_15
         _nef_peak.sequence_code_15
         _nef_peak.residue_type_15
         _nef_peak.atom_name_15
      
         # key: ordinal

         1  1  73000000  5100000  33000000  1100000  7.2  0.05  119.5  0.4  28.3  0.3  172.2  0.5  58.5  0.4  32.3  0.4  22.2  0.5  58.5  0.4  32.3  0.4  22.2  0.5  58.5  0.4  32.3  0.4  22.2  0.5  58.5  0.4  32.3  0.4  A  19  LEU  HN  A  19  LEU  N  A  24C   GLN  C  A  19  LEU  CA  A  19  LEU  CB  A  19  LEU  CG  A  19  LEU  CD1  A  19  LEU  CD2  A  19  LEU  CG  A  19  LEU  CA  A  19  LEU  CB  A  19  LEU  CG  A  24C   GLN  CA  A  24C   GLN  CB  A  24C   GLN  CG
      stop_
   save_


#=======================================================================
# Section 9
#
# Optional: Linkage table for peaks and restraints
#
# Singleton (only one per project)
#
#=======================================================================

   save_nef_peak_restraint_links

      # Mandatory parameters
      _nef_peak_restraint_links.sf_category   nef_peak_restraint_links
      _nef_peak_restraint_links.sf_framecode  nef_peak_restraint_links
      
      # The loop is optional
      # All tags within the loop are mandatory

      loop_
         _nef_peak_restraint_link.nmr_spectrum_id
         _nef_peak_restraint_link.peak_id
         _nef_peak_restraint_link.restraint_list_id
         _nef_peak_restraint_link.restraint_id
  
         # key: nmr_spectrum_id, peak_id, restraint_list_id, restraint_id
  
         nef_nmr_spectrum_cnoesy1  1  nef_distance_restraint_list_L1  5
         nef_nmr_spectrum_cnoesy1  1  nef_distance_restraint_list_L1  8
         nef_nmr_spectrum_cnoesy1  3  nef_dihedral_restraint_list_L2  4
         nef_nmr_spectrum_cnoesy1  5  nef_dihedral_restraint_list_L2  4
      stop_

      # The table gives links between peaks (in any spectrum) and restraints
      # (in any restraint list of any type).
      # There can be multiple restraint per peak, and vice versa.
      #
      # The links do not make scientific sense, but they are formally correct

save_

# End of data_nef_my_nmr_project_1
